<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.7.9 on win32)" generated="20240715 00:50:33.513" rpa="false" schemaversion="3">
<suite id="s1" name="Testcase2 Api" source="c:\Users\Paul\Documents\Testing\Eaton\TestCase2\testcase2_api.robot">
<test id="s1-t1" name="Get Random User Email and Verify Posts" line="10">
<kw name="Create Session" library="RequestsLibrary">
<arg>jsonplaceholder</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240715 00:50:34.029" level="INFO">Creating Session using : alias=jsonplaceholder, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240715 00:50:34.028" endtime="20240715 00:50:34.032"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>jsonplaceholder</arg>
<arg>/users</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20240715 00:50:34.037" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240715 00:50:34.319" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240715 00:50:34.320" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/users 
 status=200, reason=OK 
 headers={'Date': 'Sun, 14 Jul 2024 22:50:34 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1716974873&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=XJLiOiLKna0%2FOwrvZhr8aAU1WkHEEgYtpHeuuLz7vyM%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1716974873&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=XJLiOiLKna0%2FOwrvZhr8aAU1WkHEEgYtpHeuuLz7vyM%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1716974934', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"160d-1eMSsxeJRfnVLRBmYJSbCiJZ1qQ"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '3718', 'Server': 'cloudflare', 'CF-RAY': '8a35128cacdb4132-PRG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
] 
 </msg>
<msg timestamp="20240715 00:50:34.322" level="INFO">C:\Users\Paul\AppData\Local\Programs\Python\Python37\lib\site-packages\urllib3\connectionpool.py:1052: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20240715 00:50:34.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240715 00:50:34.034" endtime="20240715 00:50:34.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${users_list}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.337" level="INFO">${users_list} = [{'id': 1, 'name': 'Leanne Graham', 'username': 'Bret', 'email': 'Sincere@april.biz', 'address': {'street': 'Kulas Light', 'suite': 'Apt. 556', 'city': 'Gwenborough', 'zipcode': '92998-3874', 'geo': {...</msg>
<status status="PASS" starttime="20240715 00:50:34.332" endtime="20240715 00:50:34.339"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${random_index}</var>
<arg>random.randint(0, len(${users_list}) - 1)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240715 00:50:34.347" level="INFO">${random_index} = 3</msg>
<status status="PASS" starttime="20240715 00:50:34.339" endtime="20240715 00:50:34.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${random_user}</var>
<arg>${users_list[${random_index}]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.355" level="INFO">${random_user} = {'id': 4, 'name': 'Patricia Lebsack', 'username': 'Karianne', 'email': 'Julianne.OConner@kory.org', 'address': {'street': 'Hoeger Mall', 'suite': 'Apt. 692', 'city': 'South Elvis', 'zipcode': '53919-4...</msg>
<status status="PASS" starttime="20240715 00:50:34.350" endtime="20240715 00:50:34.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Email Address: ${random_user['email']}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240715 00:50:34.367" level="INFO">Email Address: Julianne.OConner@kory.org</msg>
<status status="PASS" starttime="20240715 00:50:34.361" endtime="20240715 00:50:34.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${random_user['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.376" level="INFO">${user_id} = 4</msg>
<status status="PASS" starttime="20240715 00:50:34.368" endtime="20240715 00:50:34.376"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${posts_response}</var>
<arg>jsonplaceholder</arg>
<arg>/posts?userId=${user_id}</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20240715 00:50:34.389" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240715 00:50:34.738" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/posts?userId=4 
 path_url=/posts?userId=4 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240715 00:50:34.739" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/posts?userId=4 
 status=200, reason=OK 
 headers={'Date': 'Sun, 14 Jul 2024 22:50:34 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1720997434&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=QmVeG1LWqpUCiq9IGU61z0uuoHNA9A8mB8MOep1%2F14s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1720997434&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=QmVeG1LWqpUCiq9IGU61z0uuoHNA9A8mB8MOep1%2F14s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1720997448', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"b6e-TjceC2BFfn52KMJbnZJeDRN+R+o"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'Server': 'cloudflare', 'CF-RAY': '8a35128d5db24132-PRG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=[
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est",
    "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
  },
  {
    "userId": 4,
    "id": 38,
    "title": "explicabo et eos deleniti nostrum ab id repellendus",
    "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
  },
  {
    "userId": 4,
    "id": 39,
    "title": "eos dolorem iste accusantium est eaque quam",
    "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
  },
  {
    "userId": 4,
    "id": 40,
    "title": "enim quo cumque",
    "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
  }
] 
 </msg>
<msg timestamp="20240715 00:50:34.741" level="INFO">C:\Users\Paul\AppData\Local\Programs\Python\Python37\lib\site-packages\urllib3\connectionpool.py:1052: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20240715 00:50:34.744" level="INFO">${posts_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240715 00:50:34.383" endtime="20240715 00:50:34.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${posts}</var>
<arg>${posts_response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.751" level="INFO">${posts} = [{'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum e...</msg>
<status status="PASS" starttime="20240715 00:50:34.746" endtime="20240715 00:50:34.751"/>
</kw>
<for flavor="IN">
<var>${post}</var>
<value>@{posts}</value>
<iter>
<var name="${post}">{'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.762" level="INFO">${post_id} = 31</msg>
<status status="PASS" starttime="20240715 00:50:34.756" endtime="20240715 00:50:34.762"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.764" endtime="20240715 00:50:34.766"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.755" endtime="20240715 00:50:34.767"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.775" level="INFO">${post_id} = 32</msg>
<status status="PASS" starttime="20240715 00:50:34.769" endtime="20240715 00:50:34.776"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.777" endtime="20240715 00:50:34.780"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.767" endtime="20240715 00:50:34.780"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.781" level="INFO">${post_id} = 33</msg>
<status status="PASS" starttime="20240715 00:50:34.781" endtime="20240715 00:50:34.781"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.781" endtime="20240715 00:50:34.791"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.781" endtime="20240715 00:50:34.791"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.806" level="INFO">${post_id} = 34</msg>
<status status="PASS" starttime="20240715 00:50:34.794" endtime="20240715 00:50:34.808"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.809" endtime="20240715 00:50:34.810"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.792" endtime="20240715 00:50:34.811"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.819" level="INFO">${post_id} = 35</msg>
<status status="PASS" starttime="20240715 00:50:34.812" endtime="20240715 00:50:34.821"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.826" endtime="20240715 00:50:34.828"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.811" endtime="20240715 00:50:34.828"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.832" level="INFO">${post_id} = 36</msg>
<status status="PASS" starttime="20240715 00:50:34.830" endtime="20240715 00:50:34.833"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.834" endtime="20240715 00:50:34.835"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.829" endtime="20240715 00:50:34.836"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.844" level="INFO">${post_id} = 37</msg>
<status status="PASS" starttime="20240715 00:50:34.837" endtime="20240715 00:50:34.845"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.846" endtime="20240715 00:50:34.848"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.837" endtime="20240715 00:50:34.848"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.853" level="INFO">${post_id} = 38</msg>
<status status="PASS" starttime="20240715 00:50:34.850" endtime="20240715 00:50:34.854"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.858" endtime="20240715 00:50:34.859"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.849" endtime="20240715 00:50:34.863"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.870" level="INFO">${post_id} = 39</msg>
<status status="PASS" starttime="20240715 00:50:34.865" endtime="20240715 00:50:34.870"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.872" endtime="20240715 00:50:34.874"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.864" endtime="20240715 00:50:34.875"/>
</iter>
<iter>
<var name="${post}">{'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${post_id}</var>
<arg>${post['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240715 00:50:34.880" level="INFO">${post_id} = 40</msg>
<status status="PASS" starttime="20240715 00:50:34.877" endtime="20240715 00:50:34.881"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>1 &lt;= int(${post_id}) &lt;= 100</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240715 00:50:34.881" endtime="20240715 00:50:34.882"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.876" endtime="20240715 00:50:34.883"/>
</iter>
<status status="PASS" starttime="20240715 00:50:34.753" endtime="20240715 00:50:34.883"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${new_post_data}</var>
<arg>userId=${user_id}</arg>
<arg>title=Test Case Title</arg>
<arg>body=Test Case Body Content</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240715 00:50:34.902" level="INFO">${new_post_data} = {'userId': 4, 'title': 'Test Case Title', 'body': 'Test Case Body Content'}</msg>
<status status="PASS" starttime="20240715 00:50:34.900" endtime="20240715 00:50:34.902"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${post_response}</var>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>json=${new_post_data}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20240715 00:50:34.909" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240715 00:50:35.244" level="INFO">POST Request : url=https://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '75', 'Content-Type': 'application/json'} 
 body=b'{"userId": 4, "title": "Test Case Title", "body": "Test Case Body Content"}' 
 </msg>
<msg timestamp="20240715 00:50:35.245" level="INFO">POST Response : url=https://jsonplaceholder.typicode.com/posts 
 status=201, reason=Created 
 headers={'Date': 'Sun, 14 Jul 2024 22:50:35 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '96', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1720997435&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=TZjAaGZFjSJf%2BJiBpD%2FqXwzy6Ur%2Fihlk06zcCd%2F65h0%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1720997435&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=TZjAaGZFjSJf%2BJiBpD%2FqXwzy6Ur%2Fihlk06zcCd%2F65h0%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1720997448', 'Vary': 'Origin, X-HTTP-Method-Override, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'Access-Control-Expose-Headers': 'Location', 'Location': 'https://jsonplaceholder.typicode.com/posts/101', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"60-1jLHSL0BBAvp8nZRCGIaz39Jhtw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8a351290b8d64132-PRG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={
  "userId": 4,
  "title": "Test Case Title",
  "body": "Test Case Body Content",
  "id": 101
} 
 </msg>
<msg timestamp="20240715 00:50:35.246" level="INFO">C:\Users\Paul\AppData\Local\Programs\Python\Python37\lib\site-packages\urllib3\connectionpool.py:1052: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20240715 00:50:35.250" level="INFO">${post_response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240715 00:50:34.909" endtime="20240715 00:50:35.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${post_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240715 00:50:35.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240715 00:50:35.255" endtime="20240715 00:50:35.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${post_response.headers['Content-Type']}</arg>
<arg>application/json; charset=utf-8</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240715 00:50:35.268" endtime="20240715 00:50:35.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${post_response.json()['title']}</arg>
<arg>Test Case Title</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240715 00:50:35.279" endtime="20240715 00:50:35.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${post_response.json()['body']}</arg>
<arg>Test Case Body Content</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240715 00:50:35.287" endtime="20240715 00:50:35.292"/>
</kw>
<status status="PASS" starttime="20240715 00:50:34.026" endtime="20240715 00:50:35.295"/>
</test>
<doc>API Testing in Robot Framework. Get a random user from https://jsonplaceholder.typicode.com/, print its email, verify that its postIDs are integer from 1 to 100, create a post under this user and get the correct response</doc>
<status status="PASS" starttime="20240715 00:50:33.522" endtime="20240715 00:50:35.305"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Testcase2 Api">Testcase2 Api</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240715 00:50:34.037" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240715 00:50:34.389" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240715 00:50:34.909" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
</errors>
</robot>
